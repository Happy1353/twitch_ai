"""
Main application - Twitch AI Girl Streamer (macOS compatible with pygame)
"""
import asyncio
import time
import threading
import pygame
from datetime import datetime
import config
from twitch_chat import start_chat_bot
from ai_brain import AIBrain
from voice_engine import VoiceEngine
from avatar_animator import AvatarAnimator


class TwitchAIGirl:
    """Main application class"""
    
    def __init__(self):
        """Initialize application"""
        print("=" * 60)
        print(f"üéÄ Twitch AI Girl - {config.CHARACTER_NAME}")
        print("=" * 60)
        
        # Initialize components
        self.ai_brain = AIBrain()
        self.voice_engine = VoiceEngine()
        self.avatar = AvatarAnimator()
        self.chat_bot = None
        
        # State
        self.last_response_time = 0
        self.is_processing = False
        self.message_queue = asyncio.Queue()
        
        # Pygame
        self.screen = None
        self.clock = None
        
    async def process_message(self, username: str, message: str):
        """
        Process incoming chat message
        
        Args:
            username: Username who sent the message
            message: Message content
        """
        # Check cooldown
        current_time = time.time()
        if current_time - self.last_response_time < config.MESSAGE_COOLDOWN:
            print(f"‚è≥ Cooldown active, skipping message from {username}")
            return
        
        # Check if already processing
        if self.is_processing:
            print(f"‚è≥ –£–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ–ø—É—Å–∫–∞—é: {username}")
            return
        
        self.is_processing = True
        
        try:
            # Get AI response
            print(f"\nü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è {username}...")
            response = await self.ai_brain.get_response(username, message)
            
            if not response:
                return
            
            print(f"üí≠ –û—Ç–≤–µ—Ç: {response}")
            
            # Convert to speech and play
            duration = await self.voice_engine.speak(
                response,
                on_start=self.avatar.start_talking,
                on_end=self.avatar.stop_talking
            )
            
            print(f"‚úì –û—Ç–≤–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω ({duration:.1f}s)\n")
            
            self.last_response_time = time.time()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        finally:
            self.is_processing = False
    
    async def start_bot_async(self):
        """Start Twitch bot in async thread"""
        try:
            print("üí¨ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Twitch —á–∞—Ç—É...")
            self.chat_bot = await start_chat_bot(self.process_message)
            
            print("\n" + "=" * 60)
            print("‚ú® –í–°–ï –°–ò–°–¢–ï–ú–´ –ó–ê–ü–£–©–ï–ù–´! ‚ú®")
            print("=" * 60)
            print(f"–ö–∞–Ω–∞–ª: {config.TWITCH_CHANNEL}")
            print(f"–ü–µ—Ä—Å–æ–Ω–∞–∂: {config.CHARACTER_NAME}")
            print("=" * 60)
            print("\n–û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ...")
            print("–ù–∞–∂–º–∏—Ç–µ ESC –≤ –æ–∫–Ω–µ –∞–≤–∞—Ç–∞—Ä–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞\n")
            
            await self.chat_bot.start()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
            self.avatar.running = False
    
    def start(self):
        """Start the application (synchronous main loop with pygame)"""
        print("\nüöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...\n")
        
        # Validate configuration
        if not self._validate_config():
            return
        
        # Initialize pygame display
        print("üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫–Ω–∞...")
        self.screen = pygame.display.set_mode((config.WINDOW_WIDTH, config.WINDOW_HEIGHT))
        pygame.display.set_caption(f"{config.CHARACTER_NAME} - Twitch Stream")
        self.clock = pygame.time.Clock()
        
        # Start avatar
        self.avatar.start()
        
        # Start Twitch bot in separate thread
        def run_bot():
            asyncio.run(self.start_bot_async())
        
        bot_thread = threading.Thread(target=run_bot, daemon=True)
        bot_thread.start()
        
        # Give bot time to connect
        time.sleep(2)
        
        # Main pygame loop (must run in main thread on macOS)
        print("üéÆ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞...\n")
        try:
            while self.avatar.running:
                if not self.avatar.update(self.screen, self.clock):
                    break
        except KeyboardInterrupt:
            print("\n\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()
        finally:
            self.cleanup()
    
    def _validate_config(self) -> bool:
        """Validate configuration"""
        errors = []
        
        if not config.TWITCH_TOKEN:
            errors.append("TWITCH_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        if not config.TWITCH_CHANNEL:
            errors.append("TWITCH_CHANNEL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        if not config.OPENAI_API_KEY:
            errors.append("OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (Groq –∫–ª—é—á)")
        
        if errors:
            print("‚ùå –û–®–ò–ë–ö–ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
            for error in errors:
                print(f"  - {error}")
            print("\n‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env")
            print("–°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
            print("üìñ –°–º. SETUP_GROQ.md –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
            return False
        
        return True
    
    def cleanup(self):
        """Cleanup resources"""
        print("üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...")
        
        if self.voice_engine:
            self.voice_engine.stop()
        
        if self.avatar:
            self.avatar.stop()
        
        pygame.quit()
        
        print("‚úì –ó–∞–≤–µ—Ä—à–µ–Ω–æ")


def main():
    """Main entry point"""
    app = TwitchAIGirl()
    app.start()


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
