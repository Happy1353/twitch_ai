import asyncio
import os
from typing import Callable, Union

class MokChatBot:
    def __init__(self, path: str, message_callback: Callable[[str, str], None]):
        self.path = path
        self.message_callback = message_callback
        self.is_running = False
        self.last_mtime = 0
        self.processed_messages = set()

    def get_new_messages(self) -> list:
        """–ß–∏—Ç–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            current_mtime = os.path.getmtime(self.path)
            
            if current_mtime <= self.last_mtime:
                return []
            
            self.last_mtime = current_mtime
            
            with open(self.path, 'r', encoding='utf-8') as file:
                all_messages = file.readlines()
            
            return [msg.strip() for msg in all_messages if msg.strip()]
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
            return []

    async def process_messages(self, messages: list):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"""
        for message in messages:
            if message and not message.startswith('#'):
                msg_hash = hash(message)
                
                if msg_hash not in self.processed_messages:
                    self.processed_messages.add(msg_hash)
                    
                    if ':' in message:
                        username, text = message.split(':', 1)
                        username = username.strip()
                        text = text.strip()
                    else:
                        username = "user"
                        text = message
                    
                    if text:
                        print(f"üí¨ [{username}]: {text}")
                        # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ callback
                        await self._call_callback(username, text)

    async def _call_callback(self, username: str, text: str):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç callback"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ callback –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π
            if asyncio.iscoroutinefunction(self.message_callback):
                await self.message_callback(username, text)
            else:
                # –ï—Å–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∑–∞–ø—É—Å–∫–∞–µ–º –≤ executor
                loop = asyncio.get_event_loop()
                await loop.run_in_executor(
                    None, self.message_callback, username, text
                )
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ callback: {e}")

    async def start(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
        self.is_running = True
        if os.path.exists(self.path):
            os.remove(self.path)
        with open(self.path, 'w', encoding='utf-8') as f:
            f.write("# –§–∞–π–ª —á–∞—Ç–∞\n# –§–æ—Ä–º–∞—Ç: username: —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n")
                
        print(f"üìñ –ú–æ–∫-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ß—Ç–µ–Ω–∏–µ –∏–∑: {self.path}")
        print("üí° –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–∞–π–ª –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏!")
        
        try:
            self.last_mtime = os.path.getmtime(self.path)
        except:
            self.last_mtime = 0
        
        try:
            while self.is_running:
                messages = self.get_new_messages()
                if messages:
                    await self.process_messages(messages)
                await asyncio.sleep(0.5)
        except KeyboardInterrupt:
            print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–∫-–±–æ—Ç–∞...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ–∫-–±–æ—Ç–µ: {e}")
        finally:
            self.is_running = False

    def stop(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞"""
        self.is_running = False

async def start_mok_bot(message_callback: Callable[[str, str], None], path: str = 'chat.txt') -> MokChatBot:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–∫-–±–æ—Ç–∞
    
    Args:
        message_callback: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–º–æ–∂–µ—Ç –±—ã—Ç—å async –∏–ª–∏ sync)
        path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        
    Returns:
        MokChatBot instance
    """
    bot = MokChatBot(path, message_callback)
    return bot